{"version":3,"sources":["gameHelpers.js","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.jsx","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.jsx","components/Stage.jsx","components/styles/StyledDisplay.js","components/Display.jsx","components/styles/StyledStartButton.js","components/StartButton.jsx","components/Tetris.jsx","hooks/usePlayer.jsx","hooks/useGameStatus.jsx","hooks/useInterval.jsx","App.js","serviceWorker.js","index.js","img/bg.png"],"names":["createStage","Array","from","fill","checkCollision","player","stage","_ref","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","_templateObject","bgImage","StyledTetris","_templateObject2","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","useStage","resetPlayer","_useState","useState","_useState2","Object","slicedToArray","setStage","_useState3","_useState4","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","concat","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","StyledStage_templateObject","props","height","width","StyledCell","StyledCell_templateObject","type","React","memo","react_default","a","createElement","Stage","components_Cell","key","StyledDisplay","StyledDisplay_templateObject","gameOver","Display","text","StyledStartButton","button","StyledStartButton_templateObject","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","_usePlayer","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","objectSpread","clonedPlayer","JSON","parse","stringify","offset","usePlayer","_usePlayer2","updatePlayerPos","playerRotate","_useStage","_useStage2","_useGameStatus","score","setScore","rows","setRows","linePoints","caclScore","useGameStatus","_useGameStatus2","console","log","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","_ref2","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","components_Stage","components_Display","components_StartButton","App","className","components_Tetris","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.056e829a.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  );\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[y].length; x += 1) {\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          !stage[y + player.pos.y + moveY] ||\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;\n","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape: [['O', 'O'], ['O', 'O']],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n    color: '227, 78, 78',\n  },\n};\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};\n","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n\n    const updateStage = prevStage => {\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      if (player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n  margin: auto;\n`;\n","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react';\nimport { StyledCell } from './styles/StyledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\n\nexport default React.memo(Cell);\n","import React from 'react';\nimport { StyledStage } from './styles/StyledStage';\n\nimport Cell from './Cell';\n\nconst Stage = ({ stage }) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\n\nexport default Stage;\n","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n","import React from 'react';\nimport { StyledDisplay } from './styles/StyledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './styles/StyledStartButton';\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton;","import React, { useState } from 'react';\nimport { createStage, checkCollision } from '../gameHelpers';\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris';\n// Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n// Components\nimport Stage from './Stage';\nimport Display from './Display';\nimport StartButton from './StartButton';\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows] = useGameStatus(rowsCleared);\n\n  console.log('re-render');\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000);\n      }\n    }\n  };\n\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setRows(0);\n    setGameOver(false);\n  };\n\n  const drop = () => {\n    setDropTime(1000);\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      if (player.pos.y < 1) {\n        console.log('GAME OVER!!!');\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const dropPlayer = () => {\n    setDropTime(null);\n    drop();\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  return (\n    <StyledTetrisWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`rows: ${rows}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  );\n};\n\nexport default Tetris;\n","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (matrix, dir) => {\n    const rotatedTetro = matrix.map((_, index) =>\n      matrix.map(col => col[index])\n    );\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n    return rotatedTetro.reverse();\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate];\n};\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const caclScore = useCallback(() => {\n    if (rowsCleared > 0) {\n      setScore(prev => prev + linePoints[rowsCleared - 1]);\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [linePoints, rowsCleared]);\n\n  useEffect(() => {\n    caclScore();\n  }, [caclScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows];\n};\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";"],"sourceRoot":""}